pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/develop']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'snavarro3283', url: 'https://snavarro3283@bitbucket.org/snavarro3283/restobar.git']]])
            }
        }        
        stage('Build') {
            steps {
                echo 'Building..'
				bat 'mvn clean install' 
				//sh 'mvn -B -DskipTests clean install'   
            }
        }
        stage('Verify') {
            steps {
                //Si quieres ver la cobertura en sonar es necesario ejecutar cobertura y después sonar
                bat "mvn -B --batch-mode -V -U -e org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=true"
                bat "mvn -B --batch-mode -V -U -e sonar:sonar"
                echo 'Sonarqube Analysis'
            }
        }
		/*
        stage ('QA') {
        //Fase de QA. En paralelo Sonar, Cobertura
           steps {
                parallel 'Sonarqube Analysis': {
                    //Si quieres ver la cobertura en sonar es necesario ejecutar cobertura y después sonar
                    bat "mvn -B --batch-mode -V -U -e org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=true"
                    bat "mvn -B --batch-mode -V -U -e sonar:sonar"
                    echo 'Sonarqube Analysis'
               }, 'Cobertura code coverage' : {
                    //Realizamos análisis de cobertura de código 
					//Si la cobertura de código es inferior al 80% falla la ejecución y falla el workflow
                    bat "mvn -B --batch-mode -V -U -e verify"
               }
          }
		  
          //Tras ejecutar los pasos en paralelos guardo el reporte de tests
          post {
               success {
                    junit 'target/surefire-reports/**/*.xml' 
               }
          }
		  
        }
	*/		
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}